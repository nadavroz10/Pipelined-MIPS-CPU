-- VHDL Entity MIPS.MIPS_tb.symbol
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--


ENTITY MIPS_tb IS
-- Declarations

END MIPS_tb ;

--
-- VHDL Architecture MIPS.MIPS_tb.struct
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;

LIBRARY work;

ARCHITECTURE struct OF MIPS_tb IS

   -- Architecture declarations

   -- Internal signal declarations


   -- Component Declarations
   COMPONENT top_p IS
   
port (
		BPADD     : in std_logic_vector(7 downto 0);
		reset,clock : in std_logic;
		CLKCNT    : OUT std_logic_vector(15 downto 0);
		STCNT, FHCNT   : OUT std_logic_vector(7 downto 0);
		ST_TRIGGER	   : OUT std_logic;
--------- pipeline lvl0   IF---------
		IF_PC_out								: OUT  STD_LOGIC_VECTOR( 9 DOWNTO 0 );
		IF_INSTUCTION_out 					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		IF_PC_SRC_OUT							: OUT 	STD_LOGIC;
		--------- pipeline lvl1   ID---------
		ID_INSTUCTION_out 					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_read_data_1_out					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_read_data_2_out					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_write_data_out 					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_SIGN_EXT_OUT						: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_Regwrite_out						: OUT 	STD_LOGIC;
		--------- pipeline lvl2   EXE---------
		EXE_INSTUCTION_out 					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_ALU_result_out					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_AINPUT_OUT						: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_BINPUT_OUT						: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_MUX_AINPUT_OUT					: OUT 	STD_LOGIC_VECTOR( 1 DOWNTO 0 );
		EXE_MUX_BINPUT_OUT					: OUT 	STD_LOGIC_VECTOR( 1 DOWNTO 0 );
		EXE_Zero_out						: OUT 	STD_LOGIC;
		EXE_MUX_ADRESS_OUT					: OUT 	STD_LOGIC_VECTOR( 4 DOWNTO 0 );
		--------- pipeline lvl3   DMEM---------
		DM_INSTUCTION_out 					: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		DM_MEM_WRITE  						: OUT 	STD_LOGIC;
		DM_WRITE_DATA                       : OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		DM_READ_DATA                        : OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		DM_MEM_ADDRESS						: OUT 	STD_LOGIC_VECTOR( 9 DOWNTO 0 );
		
		--------- pipeline lvl4   WB---------
		WB_INSTUCTION_out,WB_write_data_out	: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		WB_REGWRITE							: OUT 	STD_LOGIC;
		WB_JAL_OUT							: OUT 	STD_LOGIC
		-------------------------------------------------
);
END COMPONENT;
   COMPONENT MIPS_tester
   PORT(  
		-- Output important signals 
		BPADD     : out std_logic_vector(7 downto 0);
		reset,clock : out std_logic;
		CLKCNT    : in std_logic_vector(15 downto 0);
		STCNT, FHCNT   : in std_logic_vector(7 downto 0);
		ST_TRIGGER	   : in std_logic;
		--------- pipeline lvl0   IF---------
		IF_PC_out								: in  STD_LOGIC_VECTOR( 9 DOWNTO 0 );
		IF_INSTUCTION_out 					: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		IF_PC_SRC_OUT							: in	STD_LOGIC;
		--------- pipeline lvl1   ID---------
		ID_INSTUCTION_out 					: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_read_data_1_out					: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_read_data_2_out					: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_write_data_out 					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_SIGN_EXT_OUT						: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		ID_Regwrite_out						: in 	STD_LOGIC;
		--------- pipeline lvl2   EXE---------
		EXE_INSTUCTION_out 					: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_ALU_result_out					: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_AINPUT_OUT						: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_BINPUT_OUT						: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		EXE_MUX_AINPUT_OUT					: in 	STD_LOGIC_VECTOR( 1 DOWNTO 0 );
		EXE_MUX_BINPUT_OUT					: in 	STD_LOGIC_VECTOR( 1 DOWNTO 0 );
		EXE_Zero_out						: in 	STD_LOGIC;
		EXE_MUX_ADRESS_OUT					: in 	STD_LOGIC_VECTOR( 4 DOWNTO 0 );
		--------- pipeline lvl3   DMEM---------
		DM_INSTUCTION_out 					: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		DM_MEM_WRITE  						: in 	STD_LOGIC;
		DM_WRITE_DATA                       : in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		DM_READ_DATA                        : in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		DM_MEM_ADDRESS						: in 	STD_LOGIC_VECTOR( 9 DOWNTO 0 );
		
		--------- pipeline lvl4   WB---------
		WB_INSTUCTION_out,WB_write_data_out	: in 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
		WB_REGWRITE							: in 	STD_LOGIC;
		WB_JAL_OUT							: in 	STD_LOGIC
		

   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   
  
    signal BPADD     :  std_logic_vector(7 downto 0);
	signal	reset,clock :  std_logic;
	signal	CLKCNT    :  std_logic_vector(15 downto 0);
	signal	STCNT, FHCNT   :  std_logic_vector(7 downto 0);
	signal	ST_TRIGGER	   :  std_logic;
--------- pipeline lvl0   IF---------
	signal	IF_PC								:   STD_LOGIC_VECTOR( 9 DOWNTO 0 );
	signal	IF_INSTUCTION_out 					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	IF_PC_SRC_OUT							:  	STD_LOGIC;
		--------- pipeline lvl1   ID---------
	signal	ID_INSTUCTION_out 					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	ID_read_data_1_out					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	ID_read_data_2_out					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	ID_write_data_out 					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	ID_SIGN_EXT_OUT						:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	ID_Regwrite_out						:  	STD_LOGIC;
		--------- pipeline lvl2   EXE---------
	signal	EXE_INSTUCTION_out 					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	EXE_ALU_result_out					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	EXE_AINPUT_OUT						:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	EXE_BINPUT_OUT						:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	EXE_MUX_AINPUT_OUT					: 	STD_LOGIC_VECTOR( 1 DOWNTO 0 );
	signal	EXE_MUX_BINPUT_OUT					:  	STD_LOGIC_VECTOR( 1 DOWNTO 0 );
	signal	EXE_Zero_out						:  	STD_LOGIC;
	signal	EXE_MUX_ADRESS_OUT					:  	STD_LOGIC_VECTOR( 4 DOWNTO 0 );
		--------- pipeline lvl3   DMEM---------
	signal	DM_INSTUCTION_out 					:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	DM_MEM_WRITE  						:  	STD_LOGIC;
	signal	DM_WRITE_DATA                       :  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	DM_READ_DATA                        :  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	DM_MEM_ADDRESS						:  	STD_LOGIC_VECTOR( 9 DOWNTO 0 );
		
		--------- pipeline lvl4   WB---------
	signal	WB_INSTUCTION_out,WB_write_data_out	:  	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
	signal	WB_REGWRITE							:  	STD_LOGIC;
	signal	WB_JAL_OUT							:  	STD_LOGIC;
		-------------------------------------------------








BEGIN

   -- Instance port mappings.
   U_0 : top_p
      PORT MAP( BPADD,reset, clock,CLKCNT,STCNT, FHCNT,
		ST_TRIGGER,
		-- Output important signals 
		--------- pipeline lvl0   IF---------
		IF_PC,								
		IF_INSTUCTION_out,
		IF_PC_SRC_OUT,
		--------- pipeline lvl1   ID---------
		ID_INSTUCTION_out,
		ID_read_data_1_out,
		ID_read_data_2_out,
		ID_write_data_out,
		ID_SIGN_EXT_OUT,
		ID_Regwrite_out,
		--------- pipeline lvl2   EXE---------
		EXE_INSTUCTION_out,
		EXE_ALU_result_out,
		EXE_AINPUT_OUT,
		EXE_BINPUT_OUT,
		EXE_MUX_AINPUT_OUT,
		EXE_MUX_BINPUT_OUT,
		EXE_Zero_out,
		EXE_MUX_ADRESS_OUT,
		--------- pipeline lvl3   DMEM---------
		DM_INSTUCTION_out,
		DM_MEM_WRITE,
		DM_WRITE_DATA,
		DM_READ_DATA,
		DM_MEM_ADDRESS,
		
		--------- pipeline lvl4   WB---------
		WB_INSTUCTION_out,WB_write_data_out,
		WB_REGWRITE,
		WB_JAL_OUT
		);
   
   U_1 : MIPS_tester
      PORT MAP ( BPADD,reset, clock,CLKCNT,STCNT, FHCNT,
		ST_TRIGGER,
		-- Output important signals 
		--------- pipeline lvl0   IF---------
		IF_PC,								
		IF_INSTUCTION_out,
		IF_PC_SRC_OUT,
		--------- pipeline lvl1   ID---------
		ID_INSTUCTION_out,
		ID_read_data_1_out,
		ID_read_data_2_out,
		ID_write_data_out,
		ID_SIGN_EXT_OUT,
		ID_Regwrite_out,
		--------- pipeline lvl2   EXE---------
		EXE_INSTUCTION_out,
		EXE_ALU_result_out,
		EXE_AINPUT_OUT,
		EXE_BINPUT_OUT,
		EXE_MUX_AINPUT_OUT,
		EXE_MUX_BINPUT_OUT,
		EXE_Zero_out,
		EXE_MUX_ADRESS_OUT,
		--------- pipeline lvl3   DMEM---------
		DM_INSTUCTION_out,
		DM_MEM_WRITE,
		DM_WRITE_DATA,
		DM_READ_DATA,
		DM_MEM_ADDRESS,
		
		--------- pipeline lvl4   WB---------
		WB_INSTUCTION_out,WB_write_data_out,
		WB_REGWRITE,
		WB_JAL_OUT
		);

END struct;
